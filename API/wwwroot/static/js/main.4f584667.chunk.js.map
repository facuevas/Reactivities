{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/Navbar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCanceled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","name","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","err","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","bordered","circular","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","TestErrors","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","widths","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","Divider","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.4f584667.chunk.js","sourcesContent":["export interface Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  data: T;\n  pagination: Pagination;\n\n  constructor(data: T, pagination: Pagination) {\n    this.data = data;\n    this.pagination = pagination;\n  }\n}\n\nexport class PagingParams {\n  pageNumber;\n  pageSize;\n\n  constructor(pageNumber = 1, pageSize = 2) {\n    this.pageNumber = pageNumber;\n    this.pageSize = pageSize;\n  }\n}\n","import { UserActivity } from \"./../models/userActivity\";\nimport { PaginatedResult } from \"./../models/pagination\";\nimport { Photo, Profile } from \"./../models/profile\";\nimport { ActivityFormValues } from \"./../models/activity\";\nimport { UserFormValues } from \"./../models/users\";\nimport { store } from \"./../stores/store\";\n/*\n    This file contains all our API calls.\n*/\n\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\nimport { Activity } from \"../models/activity\";\nimport { User } from \"../models/users\";\nimport ProfileEditForm from \"../../features/profiles/ProfileEditForm\";\n\nconst sleep = (delay: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n};\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use((config) => {\n  const token = store.commonStore.token;\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\naxios.interceptors.response.use(\n  async (response) => {\n    if (process.env.NODE_ENV === \"development\") {\n      await sleep(1000);\n    }\n    const pagination = response.headers[\"pagination\"];\n    if (pagination) {\n      response.data = new PaginatedResult(response.data, JSON.parse(pagination));\n      return response as AxiosResponse<PaginatedResult<any>>;\n    }\n    return response;\n  },\n  (error: AxiosError) => {\n    const { data, status, config } = error.response!;\n    switch (status) {\n      case 400:\n        if (typeof data === \"string\") {\n          toast.error(data);\n        }\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\n          history.push(\"/not-found\");\n        }\n        if (data.errors) {\n          const modalStateErrors = [];\n          for (const key in data.errors) {\n            if (data.errors[key]) {\n              modalStateErrors.push(data.errors[key]);\n            }\n          }\n          throw modalStateErrors.flat();\n        }\n        break;\n      case 401:\n        toast.error(\"UNAUTHORIZED\");\n        break;\n      case 404:\n        history.push(\"/not-found\");\n        break;\n      case 500:\n        store.commonStore.setServerError(data);\n        history.push(\"/server-error\");\n        break;\n    }\n    return Promise.reject(error);\n  }\n);\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst requests = {\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\n  post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\n};\n\nconst Activities = {\n  list: (params: URLSearchParams) =>\n    axios.get<PaginatedResult<Activity[]>>(\"/activities\", { params }).then(responseBody),\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\n  create: (activity: ActivityFormValues) => requests.post<void>(\"/activities\", activity),\n  update: (activity: ActivityFormValues) =>\n    requests.put<void>(`/activities/${activity.id}`, activity),\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\n};\n\nconst Account = {\n  current: () => requests.get<User>(\"/account\"),\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\n  register: (user: UserFormValues) => requests.post<User>(\"/account/register\", user),\n};\n\nconst Profiles = {\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\n  uploadPhoto: (file: Blob) => {\n    let formData = new FormData();\n    formData.append(\"File\", file);\n    return axios.post<Photo>(\"photos\", formData, {\n      headers: {\n        \"Content-type\": \"multipart/form-data\",\n      },\n    });\n  },\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\n  updateProfile: (profile: Partial<Profile>) => requests.put(`/profiles`, profile),\n  updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\n  listFollowings: (username: string, predicate: string) =>\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\n  listActivities: (username: string, predicate: string) =>\n    requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`),\n};\n\nconst agent = {\n  Activities,\n  Account,\n  Profiles,\n};\n\nexport default agent;\n","import { Profile } from \"./profile\";\n\nexport interface Activity {\n  id: string;\n  title: string;\n  date: Date | null;\n  description: string;\n  category: string;\n  city: string;\n  venue: string;\n  hostUsername: string;\n  isCanceled: boolean;\n  isGoing: boolean;\n  isHost: boolean;\n  host?: Profile;\n  attendees: Profile[];\n}\n\nexport class Activity implements Activity {\n  constructor(init?: ActivityFormValues) {\n    Object.assign(this, init);\n  }\n}\n\nexport class ActivityFormValues {\n  id?: string = undefined;\n  title: string = \"\";\n  category: string = \"\";\n  description: string = \"\";\n  date: Date | null = null;\n  city: string = \"\";\n  venue: string = \"\";\n\n  constructor(activity?: Activity) {\n    if (activity) {\n      this.id = activity.id;\n      this.title = activity.title;\n      this.category = activity.category;\n      this.description = activity.description;\n      this.date = activity.date;\n      this.city = activity.city;\n      this.venue = activity.venue;\n    }\n  }\n}\n","import { User } from \"./users\";\nexport interface Profile {\n  username: string;\n  displayName: string;\n  image?: string;\n  bio?: string;\n  followersCount: number;\n  followingCount: number;\n  following: boolean;\n  photos?: Photo[];\n}\n\nexport class Profile implements Profile {\n  constructor(user: User) {\n    this.username = user.username;\n    this.displayName = user.displayName;\n    this.image = user.image;\n  }\n}\n\nexport interface Photo {\n  id: string;\n  url: string;\n  isMain: boolean;\n}\n","import { Pagination, PagingParams } from \"./../models/pagination\";\nimport { ActivityFormValues } from \"./../models/activity\";\nimport { store } from \"./store\";\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Activity } from \"../models/activity\";\nimport { format } from \"date-fns\";\nimport { Profile } from \"../models/profile\";\n\nexport default class ActivityStore {\n  activityRegistry = new Map<string, Activity>();\n  selectedActivity: Activity | undefined = undefined;\n  editMode = false;\n  loading = false;\n  loadingInitial = false;\n  pagination: Pagination | null = null;\n  pagingParams = new PagingParams();\n  predicate = new Map().set(\"all\", true);\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.pagingParams = new PagingParams();\n        this.activityRegistry.clear();\n        this.loadActivities();\n      }\n    );\n  }\n\n  setPagingParams = (pagingParams: PagingParams) => {\n    this.pagingParams = pagingParams;\n  };\n\n  setPredicate = (predicate: string, value: string | Date) => {\n    const resetPredicate = () => {\n      this.predicate.forEach((value, key) => {\n        if (key !== \"startDate\") this.predicate.delete(key);\n      });\n    };\n\n    switch (predicate) {\n      case \"all\":\n        resetPredicate();\n        this.predicate.set(\"all\", true);\n        break;\n      case \"isGoing\":\n        resetPredicate();\n        this.predicate.set(\"isGoing\", true);\n        break;\n      case \"isHost\":\n        resetPredicate();\n        this.predicate.set(\"isHost\", true);\n        break;\n      case \"startDate\":\n        this.predicate.delete(\"startDate\");\n        this.predicate.set(\"startDate\", value);\n    }\n  };\n\n  get axiosParams() {\n    const params = new URLSearchParams();\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\n    this.predicate.forEach((value, key) => {\n      if (key === \"startDate\") {\n        params.append(key, (value as Date).toISOString());\n      } else {\n        params.append(key, value);\n      }\n    });\n    return params;\n  }\n\n  get activitiesByDate() {\n    return Array.from(this.activityRegistry.values()).sort(\n      (a, b) => a.date!.getTime() - b.date!.getTime()\n    );\n  }\n\n  get groupedActivities() {\n    return Object.entries(\n      this.activitiesByDate.reduce((activities, activity) => {\n        const date = format(activity.date!, \"dd MMM yyyy\");\n        activities[date] = activities[date] ? [...activities[date], activity] : [activity];\n        return activities;\n      }, {} as { [key: string]: Activity[] })\n    );\n  }\n\n  loadActivities = async () => {\n    this.loadingInitial = true;\n    try {\n      const result = await agent.Activities.list(this.axiosParams);\n      result.data.forEach((activity) => {\n        this.setActivity(activity);\n      });\n      this.setPagination(result.pagination);\n      this.setLoadingInitial(false);\n    } catch (error) {\n      console.log(error);\n      this.setLoadingInitial(true);\n    }\n  };\n\n  setPagination = (pagination: Pagination) => {\n    this.pagination = pagination;\n  };\n\n  loadActivity = async (id: string) => {\n    let activity = this.getActivity(id);\n    if (activity) {\n      this.selectedActivity = activity;\n      return activity;\n    } else {\n      this.loadingInitial = true;\n      try {\n        activity = await agent.Activities.details(id);\n        this.setActivity(activity);\n        runInAction(() => {\n          this.selectedActivity = activity;\n        });\n        this.setLoadingInitial(false);\n        return activity;\n      } catch (error) {\n        console.log(error);\n        this.setLoadingInitial(false);\n      }\n    }\n  };\n\n  private setActivity = (activity: Activity) => {\n    const user = store.userStore.user;\n    if (user) {\n      activity.isGoing = activity.attendees!.some((a) => a.username === user.username);\n      activity.isHost = activity.hostUsername === user.username;\n      activity.host = activity.attendees?.find((x) => x.username === activity.hostUsername);\n    }\n    activity.date = new Date(activity.date!);\n    this.activityRegistry.set(activity.id, activity);\n  };\n\n  private getActivity = (id: string) => {\n    return this.activityRegistry.get(id);\n  };\n\n  setLoadingInitial = (state: boolean) => {\n    this.loadingInitial = state;\n  };\n\n  createActivity = async (activity: ActivityFormValues) => {\n    const user = store.userStore.user;\n    const attendee = new Profile(user!);\n    try {\n      await agent.Activities.create(activity);\n      const newActivity = new Activity(activity);\n      newActivity.hostUsername = user!.username;\n      newActivity.attendees = [attendee];\n      this.setActivity(newActivity);\n      runInAction(() => {\n        this.selectedActivity = newActivity;\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  updateActivity = async (activity: ActivityFormValues) => {\n    try {\n      await agent.Activities.update(activity);\n      runInAction(() => {\n        if (activity.id) {\n          let updatedActivity = { ...this.getActivity(activity.id), ...activity };\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\n          this.selectedActivity = updatedActivity as Activity;\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  deleteActivity = async (id: string) => {\n    this.loading = true;\n    try {\n      await agent.Activities.delete(id);\n      runInAction(() => {\n        this.activityRegistry.delete(id);\n        this.loading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  updateAttendance = async () => {\n    const user = store.userStore.user;\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        if (this.selectedActivity?.isGoing) {\n          this.selectedActivity.attendees = this.selectedActivity.attendees?.filter(\n            (a) => a.username !== user?.username\n          );\n          this.selectedActivity.isGoing = false;\n        } else {\n          const attendee = new Profile(user!);\n          this.selectedActivity?.attendees?.push(attendee);\n          this.selectedActivity!.isGoing = true;\n        }\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  cancelActivityToggle = async () => {\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        this.selectedActivity!.isCanceled = !this.selectedActivity!.isCanceled;\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  clearSelectedActivity = () => {\n    this.selectedActivity = undefined;\n  };\n\n  updateAttendeeFollowing = (username: string) => {\n    this.activityRegistry.forEach((activity) => {\n      activity.attendees.forEach((attendee) => {\n        if (attendee.username === username) {\n          attendee.following ? attendee.followersCount-- : attendee.followersCount++;\n          attendee.following = !attendee.following;\n        }\n      });\n    });\n  };\n}\n","import { UserActivity } from \"./../models/userActivity\";\nimport { store } from \"./store\";\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Photo, Profile } from \"./../models/profile\";\nexport default class ProfileStore {\n  profile: Profile | null = null;\n  loadingProfile = false;\n  uploading = false;\n  loading = false;\n  followings: Profile[] = [];\n  loadingFollowings = false;\n  activeTab = 0;\n  userActivities: UserActivity[] = [];\n  loadingActivities = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.activeTab,\n      (activeTab) => {\n        if (activeTab === 3 || activeTab === 4) {\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\n          this.loadFollowings(predicate);\n        } else {\n          this.followings = [];\n        }\n      }\n    );\n  }\n\n  setActiveTab = (activeTab: any) => {\n    this.activeTab = activeTab;\n  };\n\n  // returns true if the user in the store matches the profile in the store\n  // we use this to determine if the user owns the profile so they can make changes\n  get isCurrentUser() {\n    if (store.userStore.user && this.profile) {\n      return store.userStore.user.username === this.profile.username;\n    }\n    return false;\n  }\n\n  loadProfile = async (username: string) => {\n    this.loadingProfile = true;\n    try {\n      const profile = await agent.Profiles.get(username);\n      runInAction(() => {\n        this.profile = profile;\n        this.loadingProfile = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loadingProfile = false));\n    }\n  };\n\n  uploadPhoto = async (file: Blob) => {\n    this.uploading = true;\n    try {\n      const response = await agent.Profiles.uploadPhoto(file);\n      const photo = response.data;\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos?.push(photo);\n          if (photo.isMain && store.userStore.user) {\n            store.userStore.setImage(photo.url);\n            this.profile.image = photo.url;\n          }\n        }\n        this.uploading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.uploading = false));\n    }\n  };\n\n  setMainPhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.setMainPhoto(photo.id);\n      store.userStore.setImage(photo.url);\n      runInAction(() => {\n        if (this.profile && this.profile.photos) {\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\n          this.profile.image = photo.url;\n          this.loading = false;\n        }\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  deletePhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.deletePhoto(photo.id);\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos = this.profile.photos?.filter((p) => p.id !== photo.id);\n          this.loading = false;\n        }\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  updateProfile = async (profile: Partial<Profile>) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.updateProfile(profile);\n      runInAction(() => {\n        if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\n          store.userStore.setDisplayName(profile.displayName);\n        }\n        this.profile = { ...this.profile, ...(profile as Profile) };\n        this.loading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  updateFollowing = async (username: string, following: boolean) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.updateFollowing(username);\n      store.activityStore.updateAttendeeFollowing(username);\n      runInAction(() => {\n        if (\n          this.profile &&\n          this.profile.username !== store.userStore.user?.username &&\n          this.profile.username === username\n        ) {\n          following ? this.profile.followersCount++ : this.profile.followersCount--;\n          this.profile.following = !this.profile.following;\n        }\n        if (this.profile && this.profile.username === store.userStore.user?.username) {\n          following ? this.profile.followingCount++ : this.profile.followingCount--;\n        }\n        this.followings.forEach((profile) => {\n          if (profile.username === username) {\n            profile.following ? profile.followersCount-- : profile.followersCount++;\n            profile.following = !profile.following;\n          }\n        });\n        this.loading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  loadFollowings = async (predicate: string) => {\n    this.loadingFollowings = true;\n    try {\n      const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\n      runInAction(() => {\n        this.followings = followings;\n        this.loadingFollowings = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loadingFollowings = false;\n      });\n    }\n  };\n\n  loadUserActivities = async (username: string, predicate?: string) => {\n    this.loadingActivities = true;\n    try {\n      const userActivities = await agent.Profiles.listActivities(username, predicate!);\n      runInAction(() => {\n        this.userActivities = userActivities;\n        this.loadingActivities = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loadingActivities = false;\n      });\n    }\n  };\n}\n","import { UserFormValues } from \"./../models/users\";\nimport { makeAutoObservable, runInAction } from \"mobx\";\nimport { User } from \"../models/users\";\nimport agent from \"../api/agent\";\nimport { store } from \"./store\";\nimport { history } from \"../..\";\n\nexport default class UserStore {\n  user: User | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  get isLoggedIn() {\n    return !!this.user;\n  }\n\n  login = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.login(creds);\n      store.commonStore.setToken(user.token);\n      runInAction(() => {\n        this.user = user;\n      });\n      history.push(\"/activities\");\n      store.modalStore.closeModal();\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  logout = () => {\n    store.commonStore.setToken(null);\n    window.localStorage.removeItem(\"jwt\");\n    this.user = null;\n    history.push(\"/\");\n  };\n\n  getUser = async () => {\n    try {\n      const user = await agent.Account.current();\n      runInAction(() => (this.user = user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  register = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.register(creds);\n      store.commonStore.setToken(user.token);\n      runInAction(() => {\n        this.user = user;\n      });\n      history.push(\"/activities\");\n      store.modalStore.closeModal();\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  setImage = (image: string) => {\n    if (this.user) this.user.image = image;\n  };\n\n  setDisplayName = (name: string) => {\n    if (this.user) this.user.displayName = name;\n  };\n}\n","import { createContext, useContext } from \"react\";\nimport ActivityStore from \"./activityStore\";\nimport CommentStore from \"./commentStore\";\nimport CommonStore from \"./commonStore\";\nimport ModalStore from \"./modalStore\";\nimport ProfileStore from \"./profileStore\";\nimport UserStore from \"./userStore\";\n\ninterface Store {\n  activityStore: ActivityStore;\n  commonStore: CommonStore;\n  userStore: UserStore;\n  modalStore: ModalStore;\n  profileStore: ProfileStore;\n  commentStore: CommentStore;\n}\n\nexport const store: Store = {\n  activityStore: new ActivityStore(),\n  commonStore: new CommonStore(),\n  userStore: new UserStore(),\n  modalStore: new ModalStore(),\n  profileStore: new ProfileStore(),\n  commentStore: new CommentStore(),\n};\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n  return useContext(StoreContext);\n}\n","import { makeAutoObservable, reaction } from \"mobx\";\nimport { ServerError } from \"../models/serverError\";\n\nexport default class CommonStore {\n  error: ServerError | null = null;\n  token: string | null = window.localStorage.getItem(\"jwt\");\n  appLoaded = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.token,\n      (token) => {\n        if (token) {\n          window.localStorage.setItem(\"jwt\", token);\n        } else {\n          window.localStorage.removeItem(\"jwt\");\n        }\n      }\n    );\n  }\n\n  setServerError = (error: ServerError) => {\n    this.error = error;\n  };\n\n  setToken = (token: string | null) => {\n    this.token = token;\n  };\n\n  setAppLoaded = () => {\n    this.appLoaded = true;\n  };\n}\n","import { makeAutoObservable } from \"mobx\";\n\ninterface Modal {\n  open: boolean;\n  body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n  modal: Modal = {\n    open: false,\n    body: null,\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  openModal = (content: JSX.Element) => {\n    this.modal.open = true;\n    this.modal.body = content;\n  };\n\n  closeModal = () => {\n    this.modal.open = false;\n    this.modal.body = null;\n  };\n}\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\nimport { ChatComment } from \"../models/comment\";\nimport { store } from \"./store\";\n\nexport default class CommentStore {\n  comments: ChatComment[] = [];\n  hubConnection: HubConnection | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  createHubConnection = (activityId: string) => {\n    if (store.activityStore.selectedActivity) {\n      this.hubConnection = new HubConnectionBuilder()\n        .withUrl(process.env.REACT_APP_CHAT_URL + \"?activityId=\" + activityId, {\n          accessTokenFactory: () => store.userStore.user?.token!,\n        })\n        .withAutomaticReconnect()\n        .configureLogging(LogLevel.Information)\n        .build();\n\n      this.hubConnection\n        .start()\n        .catch((err) => console.log(\"Error establishing the connection: \", err));\n\n      this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\n        runInAction(() => {\n          comments.forEach((comment) => {\n            comment.createdAt = new Date(comment.createdAt + \"Z\");\n          });\n          this.comments = comments;\n        });\n      });\n\n      this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\n        runInAction(() => {\n          comment.createdAt = new Date(comment.createdAt);\n          this.comments.unshift(comment);\n        });\n      });\n    }\n  };\n\n  stopHubConnection = () => {\n    this.hubConnection?.stop().catch((err) => console.log(\"Error stopping connection: \", err));\n  };\n\n  clearComments = () => {\n    this.comments = [];\n    this.stopHubConnection();\n  };\n\n  addComment = async (values: any) => {\n    values.activityId = store.activityStore.selectedActivity?.id;\n    try {\n      await this.hubConnection?.invoke(\"SendComment\", values);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n","import { observer } from \"mobx-react-lite\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { Button, Container, Menu, Image, Dropdown } from \"semantic-ui-react\";\nimport { useStore } from \"../stores/store\";\n\nfunction Navbar() {\n  const {\n    userStore: { user, logout },\n  } = useStore();\n\n  return (\n    <Menu inverted fixed=\"top\">\n      <Container>\n        <Menu.Item as={NavLink} to=\"/\" exact header>\n          <img src=\"/assets/logo.png\" alt=\"logo\" style={{ marginRight: \"10px\" }} />\n          Reactivites\n        </Menu.Item>\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\n        <Menu.Item>\n          <Button as={NavLink} to=\"/createActivity\" positive content=\"Create Activity\" />\n        </Menu.Item>\n        <Menu.Item position=\"right\">\n          <Image src={user?.image || \"/assets/user.png\"} avatar spaced=\"right\" />\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\n            <Dropdown.Menu>\n              <Dropdown.Item\n                as={Link}\n                to={`/profiles/${user?.username}`}\n                text=\"My Profile\"\n                icon=\"user\"\n              />\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n}\n\nexport default observer(Navbar);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport Calendar from \"react-calendar\";\nimport { Header, Menu } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\n\nfunction ActivityFilters() {\n  const {\n    activityStore: { predicate, setPredicate },\n  } = useStore();\n  return (\n    <>\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 25 }}>\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\n        <Menu.Item\n          content=\"All Activities\"\n          active={predicate.has(\"all\")}\n          onClick={() => setPredicate(\"all\", \"true\")}\n        />\n        <Menu.Item\n          content=\"I'm Going\"\n          active={predicate.has(\"isGoing\")}\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\n        />\n        <Menu.Item\n          content=\"I'm Hosting\"\n          active={predicate.has(\"isHost\")}\n          onClick={() => setPredicate(\"isHost\", \"true\")}\n        />\n      </Menu>\n      <Header />\n      <Calendar\n        onChange={(date) => setPredicate(\"startDate\", date as Date)}\n        value={predicate.get(\"startDate\") || new Date()}\n      />\n    </>\n  );\n}\n\nexport default observer(ActivityFilters);\n","import { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent } from \"react\";\nimport { Button, Reveal } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface Props {\n  profile: Profile;\n}\n\nfunction FollowButton({ profile }: Props) {\n  const { profileStore, userStore } = useStore();\n  const { updateFollowing, loading } = profileStore;\n\n  if (userStore.user?.username === profile.username) return null;\n\n  function handleFollow(e: SyntheticEvent, username: string) {\n    e.preventDefault();\n    profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\n  }\n\n  return (\n    <Reveal animated=\"move\">\n      <Reveal.Content visible style={{ width: \"100%\" }}>\n        <Button fluid color=\"teal\" content={profile.following ? \" Following\" : \"Not Following\"} />\n      </Reveal.Content>\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\n        <Button\n          basic\n          fluid\n          color={profile.following ? \"red\" : \"green\"}\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\n          loading={loading}\n          onClick={(e) => handleFollow(e, profile.username)}\n        />\n      </Reveal.Content>\n    </Reveal>\n  );\n}\n\nexport default observer(FollowButton);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profile;\n}\n\nfunction ProfileCard({ profile }: Props) {\n  function truncate(str: string | undefined) {\n    if (str) {\n      return str.length > 40 ? str.substring(0, 37) + \"...\" : str;\n    }\n  }\n\n  return (\n    <Card as={Link} to={`/profiles/${profile.username}`}>\n      <Image src={profile.image || \"/assets/user.png\"} />\n      <Card.Content>\n        <Card.Header>{profile.displayName}</Card.Header>\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\n      </Card.Content>\n      <Card.Content extra>\n        <Icon name=\"user\" />\n        {profile.followersCount} followers\n      </Card.Content>\n      <FollowButton profile={profile} />\n    </Card>\n  );\n}\n\nexport default observer(ProfileCard);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { List, Image, Popup } from \"semantic-ui-react\";\nimport { Profile } from \"../../../app/models/profile\";\nimport ProfileCard from \"../../profiles/ProfileCard\";\n\ninterface Props {\n  attendees: Profile[];\n}\n\nfunction ActivityListItemAttendee({ attendees }: Props) {\n  const styles = {\n    borderColor: \"orange\",\n    borderWidth: 3,\n  };\n\n  return (\n    <List horizontal>\n      {attendees.map((attendee) => (\n        <Popup\n          hoverable\n          key={attendee.username}\n          trigger={\n            <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\n              <Image\n                bordered\n                style={attendee.following ? styles : null}\n                size=\"mini\"\n                circular\n                src={attendee.image || \"/assets/user.png\"}\n              />\n            </List.Item>\n          }\n        >\n          <Popup.Content>\n            <ProfileCard profile={attendee} />\n          </Popup.Content>\n        </Popup>\n      ))}\n    </List>\n  );\n}\n\nexport default observer(ActivityListItemAttendee);\n","import { format } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\n\ninterface Props {\n  activity: Activity;\n}\n\nconst ActivityListItem = ({ activity }: Props) => {\n  return (\n    <Segment.Group>\n      <Segment>\n        {activity.isCanceled && (\n          <Label attached=\"top\" color=\"red\" content=\"Cancelled\" style={{ textAlign: \"center\" }} />\n        )}\n        <Item.Group>\n          <Item>\n            <Item.Image\n              style={{ marginBottom: 3 }}\n              size=\"tiny\"\n              circular\n              src={activity.host?.image || \"/assets/user.png\"}\n            />\n            <Item.Content>\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                {activity.title}\n              </Item.Header>\n              <Item.Description>\n                Hosted by{\" \"}\n                <Link to={`/profiles/${activity.host?.username}`}>\n                  {activity.host?.displayName}\n                </Link>{\" \"}\n              </Item.Description>\n              {activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"orange\">\n                    You are hosting this activity\n                  </Label>\n                </Item.Description>\n              )}\n              {activity.isGoing && !activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"green\">\n                    You are going to this activity\n                  </Label>\n                </Item.Description>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <span>\n          <Icon name=\"clock\" /> {format(activity.date!, \"dd MMM yyyy h:mm aa\")}\n          <Icon name=\"marker\" /> {activity.venue}\n        </span>\n      </Segment>\n      <Segment secondary>\n        <ActivityListItemAttendee attendees={activity.attendees!} />\n      </Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button\n          as={Link}\n          to={`/activities/${activity.id}`}\n          color=\"teal\"\n          floated=\"right\"\n          content=\"View\"\n        />\n      </Segment>\n    </Segment.Group>\n  );\n};\n\nexport default ActivityListItem;\n","import { observer } from \"mobx-react-lite\";\nimport { Fragment } from \"react\";\nimport { Header } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityListItem from \"./ActivityListItem\";\n\nfunction ActivityList() {\n  const { activityStore } = useStore();\n  const { groupedActivities } = activityStore;\n\n  return (\n    <>\n      {groupedActivities.map(([group, activities]) => (\n        <Fragment key={group}>\n          <Header sub color=\"teal\">\n            {group}\n          </Header>\n\n          {activities.map((activity) => (\n            <ActivityListItem key={activity.id} activity={activity} />\n          ))}\n        </Fragment>\n      ))}\n    </>\n  );\n}\n\nexport default observer(ActivityList);\n","import React, { Fragment } from \"react\";\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\n\nfunction ActivityListItemPlaceholder() {\n  return (\n    <Fragment>\n      <Placeholder fluid style={{ marginTop: 25 }}>\n        <Segment.Group>\n          <Segment style={{ minHeight: 110 }}>\n            <Placeholder>\n              <Placeholder.Header image>\n                <Placeholder.Line />\n                <Placeholder.Line />\n              </Placeholder.Header>\n              <Placeholder.Paragraph>\n                <Placeholder.Line />\n              </Placeholder.Paragraph>\n            </Placeholder>\n          </Segment>\n          <Segment>\n            <Placeholder>\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder>\n          </Segment>\n          <Segment secondary style={{ minHeight: 70 }} />\n          <Segment clearing>\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\n          </Segment>\n        </Segment.Group>\n      </Placeholder>\n    </Fragment>\n  );\n}\n\nexport default ActivityListItemPlaceholder;\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport { PagingParams } from \"../../../app/models/pagination\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityFilters from \"./ActivityFilters\";\nimport ActivityList from \"./ActivityList\";\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\n\nfunction ActivityDashboard() {\n  const { activityStore } = useStore();\n  const { loadActivities, activityRegistry, setPagingParams, pagination } = activityStore;\n  const [loadingNext, setLoadingNext] = useState(false);\n\n  function handleGetNext() {\n    setLoadingNext(true);\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\n    loadActivities().then(() => setLoadingNext(false));\n  }\n\n  useEffect(() => {\n    if (activityRegistry.size <= 1) loadActivities();\n  }, [activityRegistry.size, loadActivities]);\n\n  return (\n    <Grid>\n      <Grid.Column width=\"10\">\n        {activityStore.loadingInitial && !loadingNext ? (\n          <>\n            <ActivityListItemPlaceholder />\n            <ActivityListItemPlaceholder />\n          </>\n        ) : (\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={handleGetNext}\n            hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\n            initialLoad={false}\n          >\n            <ActivityList />\n          </InfiniteScroll>\n        )}\n      </Grid.Column>\n      <Grid.Column width=\"6\">\n        <ActivityFilters />\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <Loader active={loadingNext} />\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nexport default observer(ActivityDashboard);\n","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  label?: string;\n  type?: string;\n}\n\nfunction MyTextInput(props: Props) {\n  const [field, meta] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <input {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n\nexport default MyTextInput;\n","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Header, Label } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\n\nfunction LoginForm() {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\", error: null }}\n      onSubmit={(values, { setErrors }) =>\n        userStore.login(values).catch((error) => setErrors({ error: \"Invalid email or password\" }))\n      }\n    >\n      {({ handleSubmit, isSubmitting, errors }) => (\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n          <Header as=\"h2\" content=\"Login to Reactivities\" textAlign=\"center\" color=\"teal\" />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => (\n              <Label style={{ marginBottom: 10 }} basic color=\"red\" content={errors.error} />\n            )}\n          />\n          <Button loading={isSubmitting} positive content=\"Login\" type=\"submit\" fluid />\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default observer(LoginForm);\n","import React from \"react\";\nimport { Message } from \"semantic-ui-react\";\n\ninterface Props {\n  errors: any;\n}\n\nfunction ValidationErrors({ errors }: Props) {\n  return (\n    <Message error>\n      {errors && (\n        <Message.List>\n          {errors.map((err: any, i: any) => (\n            <Message.Item key={i}>{err}</Message.Item>\n          ))}\n        </Message.List>\n      )}\n    </Message>\n  );\n}\n\nexport default ValidationErrors;\n","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Header } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport ValidationErrors from \"../errors/ValidationErrors\";\n\nfunction RegisterForm() {\n  const { userStore } = useStore();\n  return (\n    <Formik\n      initialValues={{ displayName: \"\", username: \"\", email: \"\", password: \"\", error: null }}\n      onSubmit={(values, { setErrors }) =>\n        userStore.register(values).catch((error) => setErrors({ error }))\n      }\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n        username: Yup.string().required(),\n        email: Yup.string().required().email(),\n        password: Yup.string().required(),\n      })}\n    >\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\n        <Form className=\"ui form error\" onSubmit={handleSubmit} autoComplete=\"off\">\n          <Header as=\"h2\" content=\"Sign up to Reactivities\" textAlign=\"center\" color=\"teal\" />\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage name=\"error\" render={() => <ValidationErrors errors={errors.error} />} />\n          <Button\n            disabled={!isValid || !dirty || isSubmitting}\n            loading={isSubmitting}\n            positive\n            content=\"Register\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default observer(RegisterForm);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Header, Segment, Image, Button } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport LoginForm from \"../users/LoginForm\";\nimport RegisterForm from \"../users/RegisterForm\";\n\nfunction HomePage() {\n  const { userStore, modalStore } = useStore();\n  return (\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\n      <Container text>\n        <Header as=\"h1\" inverted>\n          <Image size=\"massive\" src=\"/assets/logo.png\" alt=\"logo\" style={{ marginBottom: 12 }} />\n          Reactivities\n        </Header>\n        {userStore.isLoggedIn ? (\n          <>\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\n              Go to Activities!\n            </Button>\n          </>\n        ) : (\n          <>\n            <Button onClick={() => modalStore.openModal(<LoginForm />)} size=\"huge\" inverted>\n              Login\n            </Button>\n            <Button onClick={() => modalStore.openModal(<RegisterForm />)} size=\"huge\" inverted>\n              Register\n            </Button>\n          </>\n        )}\n      </Container>\n    </Segment>\n  );\n}\n\nexport default observer(HomePage);\n","import React from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\ninterface Props {\n  inverted?: boolean;\n  content?: string;\n}\n\nexport default function LoadingComponent({ inverted = true, content = \"Loading\" }: Props) {\n  return (\n    <Dimmer active={true} inverted={inverted}>\n      <Loader content={content} />\n    </Dimmer>\n  );\n}\n","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  rows: number;\n  label?: string;\n}\n\nfunction MyTextArea(props: Props) {\n  const [field, meta] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <textarea {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n\nexport default MyTextArea;\n","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label, Select } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  options: any;\n  label?: string;\n}\n\nfunction MySelectInput(props: Props) {\n  const [field, meta, helpers] = useField(props.name);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <Select\n        clearable\n        options={props.options}\n        value={field.value || null}\n        onChange={(e, d) => helpers.setValue(d.value)}\n        onBlur={() => helpers.setTouched(true)}\n        placeholder={props.placeholder}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n\nexport default MySelectInput;\n","export const categoryOptions = [\n  { text: \"Drinks\", value: \"drinks\" },\n  { text: \"Culture\", value: \"culture\" },\n  { text: \"Film\", value: \"film\" },\n  { text: \"Food\", value: \"food\" },\n  { text: \"Music\", value: \"music\" },\n  { text: \"Travel\", value: \"travel\" },\n];\n","import { useField } from \"formik\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\n\nfunction MyDateInput(props: Partial<ReactDatePickerProps>) {\n  const [field, meta, helpers] = useField(props.name!);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <DatePicker\n        {...field}\n        {...props}\n        selected={(field.value && new Date(field.value)) || null}\n        onChange={(value) => helpers.setValue(value)}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {meta.error}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n\nexport default MyDateInput;\n","import { observer } from \"mobx-react-lite\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport { v4 as uuid } from \"uuid\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\nimport { ActivityFormValues } from \"../../../app/models/activity\";\n\nfunction ActivityForm() {\n  const history = useHistory();\n  const { activityStore } = useStore();\n  const { createActivity, updateActivity, loadActivity, loadingInitial } = activityStore;\n  const { id } = useParams<{ id: string }>();\n\n  const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\n\n  const validationSchema = Yup.object({\n    title: Yup.string().required(\"The activity title is required\"),\n    description: Yup.string().required(\"The activity description is required\"),\n    category: Yup.string().required(),\n    date: Yup.string().required(\"Date is required\").nullable(),\n    venue: Yup.string().required(),\n    city: Yup.string().required(),\n  });\n\n  useEffect(() => {\n    if (id) loadActivity(id).then((activity) => setActivity(new ActivityFormValues(activity)));\n  }, [id, loadActivity]);\n\n  function handleFormSubmit(activity: ActivityFormValues) {\n    if (!activity.id) {\n      let newActivity = {\n        ...activity,\n        id: uuid(),\n      };\n      createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`));\n    } else {\n      updateActivity(activity).then(() => history.push(`/activities/${activity.id}`));\n    }\n  }\n\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\n\n  return (\n    <Segment clearing>\n      <Header content=\"Activity Details\" sub color=\"teal\" />\n      <Formik\n        enableReinitialize\n        initialValues={activity}\n        onSubmit={(values) => handleFormSubmit(values)}\n        validationSchema={validationSchema}\n      >\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\n            <MySelectInput options={categoryOptions} placeholder=\"Category\" name=\"category\" />\n            <MyDateInput\n              placeholderText=\"Date\"\n              name=\"date\"\n              showTimeSelect\n              timeCaption=\"time\"\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n            />\n            <Header content=\"Activity Location Details\" sub color=\"teal\" />\n            <MyTextInput placeholder=\"City\" name=\"city\" />\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\n            <Button\n              disabled={isSubmitting || !dirty || !isValid}\n              loading={isSubmitting}\n              floated=\"right\"\n              positive\n              type=\"submit\"\n              content=\"Submit\"\n            />\n            <Button as={Link} to=\"/activities\" floated=\"right\" type=\"button\" content=\"Cancel\" />\n          </Form>\n        )}\n      </Formik>\n    </Segment>\n  );\n}\n\nexport default observer(ActivityForm);\n","import { Formik, Form, Field, FieldProps } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Header, Segment, Comment, Loader } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport { formatDistanceToNow } from \"date-fns\";\n\ninterface Props {\n  activityId: string;\n}\n\nfunction ActivityDetailedChat({ activityId }: Props) {\n  const { commentStore } = useStore();\n\n  useEffect(() => {\n    if (activityId) {\n      commentStore.createHubConnection(activityId);\n    }\n    return () => {\n      commentStore.clearComments();\n    };\n  }, [activityId, commentStore]);\n\n  return (\n    <>\n      <Segment textAlign=\"center\" attached=\"top\" inverted color=\"teal\" style={{ border: \"none\" }}>\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached clearing>\n        <Formik\n          onSubmit={(values, { resetForm }) =>\n            commentStore.addComment(values).then(() => resetForm())\n          }\n          initialValues={{ body: \"\" }}\n          validationSchema={Yup.object({\n            body: Yup.string().required(),\n          })}\n        >\n          {({ isSubmitting, isValid, handleSubmit }) => (\n            <Form className=\"ui form\">\n              <Field name=\"body\">\n                {(props: FieldProps) => (\n                  <div style={{ position: \"relative\" }}>\n                    <Loader active={isSubmitting} />\n                    <textarea\n                      placeholder=\"Enter your comment (Enter to submit. SHIFT + Enter for new line\"\n                      rows={2}\n                      {...props.field}\n                      onKeyPress={(e) => {\n                        if (e.key === \"Enter\" && e.shiftKey) {\n                          return;\n                        }\n                        if (e.key === \"Enter\" && !e.shiftKey) {\n                          e.preventDefault();\n                          isValid && handleSubmit();\n                        }\n                      }}\n                    />\n                  </div>\n                )}\n              </Field>\n            </Form>\n          )}\n        </Formik>\n        <Comment.Group>\n          {commentStore.comments.map((comment) => (\n            <Comment key={comment.id}>\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\n              <Comment.Content>\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\n                  {comment.displayName}\n                </Comment.Author>\n                <Comment.Metadata>\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\n                </Comment.Metadata>\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>{comment.body}</Comment.Text>\n              </Comment.Content>\n            </Comment>\n          ))}\n        </Comment.Group>\n      </Segment>\n    </>\n  );\n}\n\nexport default observer(ActivityDetailedChat);\n","import { format } from \"date-fns\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Segment, Image, Item, Header, Button, Label } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport { useStore } from \"../../../app/stores/store\";\n\nconst activityImageStyle = {\n  filter: \"brightness(30%)\",\n};\n\nconst activityImageTextStyle = {\n  position: \"absolute\",\n  bottom: \"5%\",\n  left: \"5%\",\n  width: \"100%\",\n  height: \"auto\",\n  color: \"white\",\n};\n\ninterface Props {\n  activity: Activity;\n}\n\nfunction ActivityDetailedHeader({ activity }: Props) {\n  const {\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\n  } = useStore();\n  return (\n    <Segment.Group>\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\n        {activity.isCanceled && (\n          <Label\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\n            ribbon\n            color=\"red\"\n            content=\"Cancelled\"\n          />\n        )}\n        <Image\n          src={`/assets/categoryImages/${activity.category}.jpg`}\n          fluid\n          style={activityImageStyle}\n        />\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header size=\"huge\" content={activity.title} style={{ color: \"white\" }} />\n                <p>{format(activity.date!, \"dd MMM yyyy\")}</p>\n                <p>\n                  Hosted by{\" \"}\n                  <strong>\n                    <Link to={`/profiles/${activity.host?.username}`}>\n                      {activity.host?.displayName}\n                    </Link>\n                  </strong>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment>\n        <Segment clearing attached=\"bottom\">\n          {activity.isHost ? (\n            <>\n              <Button\n                color={activity.isCanceled ? \"green\" : \"red\"}\n                floated=\"left\"\n                basic\n                content={activity.isCanceled ? \"Re-activate Activity\" : \"Cancel Activity\"}\n                onClick={cancelActivityToggle}\n                loading={loading}\n              />\n              <Button\n                as={Link}\n                disabled={activity.isCanceled}\n                to={`/manage/${activity.id}`}\n                color=\"orange\"\n                floated=\"right\"\n              >\n                Manage Event\n              </Button>\n            </>\n          ) : activity.isGoing ? (\n            <Button loading={loading} onClick={updateAttendance}>\n              Cancel Attendence\n            </Button>\n          ) : (\n            <Button\n              disabled={activity.isCanceled}\n              loading={loading}\n              onClick={updateAttendance}\n              color=\"teal\"\n            >\n              Join Activity\n            </Button>\n          )}\n        </Segment>\n      </Segment>\n    </Segment.Group>\n  );\n}\n\nexport default observer(ActivityDetailedHeader);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Grid, Icon, Segment } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport { format } from \"date-fns\";\n\ninterface Props {\n  activity: Activity;\n}\n\nfunction ActivityDetailedInfo({ activity }: Props) {\n  return (\n    <Segment.Group>\n      <Segment attached=\"top\">\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{activity.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>{format(activity.date!, \"dd MMM yyyy h:mm aa\")}</span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>\n              {activity.venue}, {activity.city}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  );\n}\n\nexport default observer(ActivityDetailedInfo);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Item, Label, List, Segment, Image } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\n\ninterface Props {\n  activity: Activity;\n}\n\nfunction ActivityDetailedSidebar({ activity: { attendees, host } }: Props) {\n  if (!attendees) return null;\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        style={{ border: \"none\" }}\n        attached=\"top\"\n        secondary\n        inverted\n        color=\"teal\"\n      >\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \" People\"} going\n      </Segment>\n      <Segment attached>\n        <List relaxed divided>\n          {attendees.map((attendee) => (\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\n              {attendee.username === host?.username && (\n                <Label style={{ position: \"absolute\" }} color=\"orange\" ribbon=\"right\">\n                  Host\n                </Label>\n              )}\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\n              <Item.Content verticalAlign=\"middle\">\n                <Item.Header as=\"h3\">\n                  <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\n                </Item.Header>\n                {attendee.following && (\n                  <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\n                )}\n              </Item.Content>\n            </Item>\n          ))}\n        </List>\n      </Segment>\n    </>\n  );\n}\n\nexport default observer(ActivityDetailedSidebar);\n","import { observer } from \"mobx-react-lite\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\n\nfunction ActivityDetails() {\n  const { activityStore } = useStore();\n  const { selectedActivity: activity, loadActivity, loadingInitial } = activityStore;\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    if (id) loadActivity(id);\n    return () => {\n      activityStore.clearSelectedActivity();\n    };\n  }, [activityStore, id, loadActivity]);\n\n  if (loadingInitial || !activity) return <LoadingComponent />;\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailedHeader activity={activity} />\n        <ActivityDetailedInfo activity={activity} />\n        <ActivityDetailedChat activityId={activity.id} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityDetailedSidebar activity={activity} />\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nexport default observer(ActivityDetails);\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport ValidationErrors from \"./ValidationErrors\";\n\nfunction TestErrors() {\n  const baseUrl = process.env.REACT_APP_API_URL;\n  const [errors, setErrors] = useState();\n\n  function handleNotFound() {\n    axios.get(baseUrl + \"buggy/not-found\").catch((err) => console.log(err.response));\n  }\n\n  function handleBadRequest() {\n    axios.get(baseUrl + \"buggy/bad-request\").catch((err) => console.log(err.response));\n  }\n\n  function handleServerError() {\n    axios.get(baseUrl + \"buggy/server-error\").catch((err) => console.log(err.response));\n  }\n\n  function handleUnauthorised() {\n    axios.get(baseUrl + \"buggy/unauthorised\").catch((err) => console.log(err.response));\n  }\n\n  function handleBadGuid() {\n    axios.get(baseUrl + \"activities/notaguid\").catch((err) => console.log(err.response));\n  }\n\n  function handleValidationError() {\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\n  }\n\n  return (\n    <>\n      <Header as=\"h1\" content=\"Test Error Component\" />\n      <Segment>\n        <Button.Group>\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\n          <Button onClick={handleBadRequest} content=\"Bad Request\" basic primary />\n          <Button onClick={handleValidationError} content=\"Validation Error\" basic primary />\n          <Button onClick={handleServerError} content=\"Server Error\" basic primary />\n          <Button onClick={handleUnauthorised} content=\"Unauthorised\" basic primary />\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\n        </Button.Group>\n      </Segment>\n      {errors && <ValidationErrors errors={errors} />}\n    </>\n  );\n}\n\nexport default TestErrors;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\n\nfunction NotFound() {\n  return (\n    <Segment placeholder>\n      <Header icon>\n        <Icon name=\"search\" />\n        Oops - we've looked everywhere and couldn't find this!\n      </Header>\n      <Segment.Inline>\n        <Button as={Link} to=\"/activities\" primary>\n          Return to activities page\n        </Button>\n      </Segment.Inline>\n    </Segment>\n  );\n}\n\nexport default NotFound;\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Container, Header, Segment } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\n\nfunction ServerError() {\n  const { commonStore } = useStore();\n\n  return (\n    <Container>\n      <Header as=\"h1\" content=\"Server Error\" />\n      <Header as=\"h5\" color=\"red\" content={commonStore.error?.message} />\n      {commonStore.error?.details && (\n        <Segment>\n          <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\n          <code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\n        </Segment>\n      )}\n    </Container>\n  );\n}\n\nexport default observer(ServerError);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Modal } from \"semantic-ui-react\";\nimport { useStore } from \"../../stores/store\";\n\nfunction ModalContainer() {\n  const { modalStore } = useStore();\n\n  return (\n    <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size=\"mini\">\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\n    </Modal>\n  );\n}\n\nexport default observer(ModalContainer);\n","import { Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { useStore } from \"../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\nimport { Button } from \"semantic-ui-react\";\n\ninterface Props {\n  setEditMode: (editMode: boolean) => void;\n}\n\nfunction ProfileEditForm({ setEditMode }: Props) {\n  const {\n    profileStore: { profile, updateProfile },\n  } = useStore();\n  return (\n    <Formik\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\n      onSubmit={(values) => {\n        updateProfile(values).then(() => {\n          setEditMode(false);\n        });\n      }}\n      validationSchema={Yup.object({ displayName: Yup.string().required() })}\n    >\n      {({ isSubmitting, isValid, dirty }) => (\n        <Form className=\"ui form\">\n          <MyTextInput placeholder=\"Display name\" name=\"displayName\" />\n          <MyTextArea rows={3} placeholder=\"Tell us about yourself here!\" name=\"bio\" />\n          <Button\n            positive\n            type=\"submit\"\n            loading={isSubmitting}\n            content=\"Update Profile\"\n            floated=\"right\"\n            disabled={!isValid || !dirty}\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default observer(ProfileEditForm);\n","import { observer } from \"mobx-react-lite\";\nimport React, { useState } from \"react\";\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileEditForm from \"./ProfileEditForm\";\n\nfunction ProfileAbout() {\n  const { profileStore } = useStore();\n  const { isCurrentUser, profile } = profileStore;\n  const [editMode, setEditMode] = useState(false);\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width=\"16\">\n          <Header floated=\"left\" icon=\"user\" content={`About ${profile?.displayName}`} />\n          {isCurrentUser && (\n            <Button\n              floated=\"right\"\n              basic\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\n              onClick={() => setEditMode(!editMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width=\"16\">\n          {editMode ? (\n            <ProfileEditForm setEditMode={setEditMode} />\n          ) : (\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n}\n\nexport default observer(ProfileAbout);\n","import { format } from \"date-fns\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Grid, Image, Tab, TabProps } from \"semantic-ui-react\";\nimport { UserActivity } from \"../../app/models/userActivity\";\nimport { useStore } from \"../../app/stores/store\";\n\nconst panes = [\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\n  { menuItem: \"past Events\", pane: { key: \"past\" } },\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\n];\n\nfunction ProfileActivities() {\n  const { profileStore } = useStore();\n  const { loadUserActivities, profile, loadingActivities, userActivities } = profileStore;\n\n  useEffect(() => {\n    loadUserActivities(profile!.username);\n  }, [loadUserActivities, profile]);\n\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\n    loadUserActivities(profile!.username, panes[data.activeIndex as number].pane.key);\n  };\n\n  return (\n    <Tab.Pane loading={loadingActivities}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Tab\n            panes={panes}\n            menu={{ secondary: true, pointing: true }}\n            onTabChange={(e, data) => handleTabChange(e, data)}\n          />\n          <br />\n          <Card.Group itemsPerRow={4}>\n            {userActivities.map((activity: UserActivity) => (\n              <Card as={Link} to={`/activities/${activity.id}`} key={activity.id}>\n                <Image\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\n                />\n                <Card.Content>\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\n                  <Card.Meta textAlign=\"center\">\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\n                  </Card.Meta>\n                </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n}\n\nexport default observer(ProfileActivities);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileCard from \"./ProfileCard\";\n\nfunction ProfileFollowings() {\n  const { profileStore } = useStore();\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\n\n  return (\n    <Tab.Pane loading={loadingFollowings}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header\n            floated=\"left\"\n            icon=\"user\"\n            content={\n              activeTab === 3\n                ? `People following ${profile?.displayName}`\n                : `People ${profile?.displayName} is following`\n            }\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Card.Group itemsPerRow={4}>\n            {followings.map((profile) => (\n              <ProfileCard key={profile.username} profile={profile} />\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n}\n\nexport default observer(ProfileFollowings);\n","import React from \"react\";\nimport { Cropper } from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\n\ninterface Props {\n  imagePreview: string;\n  setCropper: (cropper: Cropper) => void;\n}\n\nfunction PhotoWidgetCropper({ imagePreview, setCropper }: Props) {\n  return (\n    <Cropper\n      src={imagePreview}\n      style={{ height: 200, width: \"100%\" }}\n      initialAspectRatio={1}\n      aspectRatio={1}\n      preview=\".img-preview\"\n      guides={false}\n      viewMode={1}\n      autoCropArea={1}\n      background={false}\n      onInitialized={(cropper) => setCropper(cropper)}\n    />\n  );\n}\n\nexport default PhotoWidgetCropper;\n","import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Header, Icon } from \"semantic-ui-react\";\n\ninterface Props {\n  setFiles: (files: any) => void;\n}\n\nfunction PhotoWidgetDropzone({ setFiles }: Props) {\n  const dzStyles = {\n    border: \"dashed 3px #eee\",\n    borderColor: \"#eee\",\n    borderRadius: \"5px\",\n    paddingTop: \"30px\",\n    textAlign: \"center\" as \"center\",\n    height: 200,\n  };\n\n  const dzActiveStyle = {\n    borderColor: \"green\",\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file: any) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n    [setFiles]\n  );\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <div {...getRootProps()} style={isDragActive ? { ...dzStyles, ...dzActiveStyle } : dzStyles}>\n      <input {...getInputProps()} />\n      <Icon name=\"upload\" size=\"huge\" />\n      <Header content=\"Drop image here\" />\n    </div>\n  );\n}\n\nexport default PhotoWidgetDropzone;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Grid, Header } from \"semantic-ui-react\";\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\nimport { Cropper } from \"react-cropper\";\n\ninterface Props {\n  loading: boolean;\n  uploadPhoto: (file: Blob) => void;\n}\n\nfunction PhotoUploadWidget({ loading, uploadPhoto }: Props) {\n  const [files, setFiles] = useState<any>([]);\n  const [cropper, setCropper] = useState<Cropper>();\n\n  function onCrop() {\n    if (cropper) {\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\n    }\n  }\n\n  useEffect(() => {\n    // cleanup file from memory\n    return () => {\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\n    };\n  }, [files]);\n\n  return (\n    <Grid>\n      <Grid.Column width={4}>\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\n        <PhotoWidgetDropzone setFiles={setFiles} />\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\n        {files && files.length > 0 && (\n          <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />\n        )}\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header sub color=\"teal\" content=\"Step 3 - Preview and upload\" />\n        {files && files.length > 0 && (\n          <>\n            <div className=\"img-preview\" style={{ minHeight: 200, overflow: \"hidden\" }} />\n            <Button.Group widths={2}>\n              <Button loading={loading} onClick={onCrop} positive icon=\"check\" />\n              <Button disabled={loading} onClick={() => setFiles([])} icon=\"close\" />\n            </Button.Group>\n          </>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nexport default PhotoUploadWidget;\n","import { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent, useState } from \"react\";\nimport { Card, Header, Tab, Image, Grid, Button } from \"semantic-ui-react\";\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\nimport { Photo, Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface Props {\n  profile: Profile;\n}\n\nfunction ProfilePhotos({ profile }: Props) {\n  const {\n    profileStore: { isCurrentUser, uploadPhoto, uploading, loading, setMainPhoto, deletePhoto },\n  } = useStore();\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\n  const [target, setTarget] = useState(\"\");\n\n  function handlePhotoUpload(file: Blob) {\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\n  }\n\n  function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n    setTarget(e.currentTarget.name);\n    setMainPhoto(photo);\n  }\n\n  function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\n    setTarget(e.currentTarget.name);\n    deletePhoto(photo);\n  }\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\n          {isCurrentUser && (\n            <Button\n              floated=\"right\"\n              basic\n              content={addPhotoMode ? \"Cancel\" : \"Add\"}\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width={16}>\n          {addPhotoMode ? (\n            <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading} />\n          ) : (\n            <Card.Group itemsPerRow={5}>\n              {profile.photos?.map((photo) => (\n                <Card key={photo.id}>\n                  <Image src={photo.url} />\n                  {isCurrentUser && (\n                    <Button.Group fluid widths={2}>\n                      <Button\n                        basic\n                        color=\"green\"\n                        content=\"Main\"\n                        name={\"main\" + photo.id}\n                        disabled={photo.isMain}\n                        loading={target === \"main\" + photo.id && loading}\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\n                      />\n                      <Button\n                        basic\n                        color=\"red\"\n                        icon=\"trash\"\n                        loading={target === photo.id && loading}\n                        onClick={(e) => handleDeletePhoto(photo, e)}\n                        disabled={photo.isMain}\n                        name={photo.id}\n                      />\n                    </Button.Group>\n                  )}\n                </Card>\n              ))}\n            </Card.Group>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n}\n\nexport default observer(ProfilePhotos);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Tab } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileActivities from \"./ProfileActivities\";\nimport ProfileFollowings from \"./ProfileFollowings\";\nimport ProfilePhotos from \"./ProfilePhotos\";\n\ninterface Props {\n  profile: Profile;\n}\n\nfunction ProfileContent({ profile }: Props) {\n  const { profileStore } = useStore();\n\n  const panes = [\n    { menuItem: \"About\", render: () => <ProfileAbout /> },\n    { menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\n    { menuItem: \"Events\", render: () => <ProfileActivities /> },\n    { menuItem: \"Followers\", render: () => <ProfileFollowings /> },\n    { menuItem: \"Following\", render: () => <ProfileFollowings /> },\n  ];\n\n  return (\n    <Tab\n      menu={{ fluid: true, vertical: true }}\n      menuPosition=\"right\"\n      panes={panes}\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\n    />\n  );\n}\n\nexport default observer(ProfileContent);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Divider, Grid, Header, Item, Segment, Statistic } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/profile\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profile;\n}\n\nfunction ProfileHeader({ profile }: Props) {\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width={12}>\n          <Item.Group>\n            <Item>\n              <Item.Image avatar size=\"small\" src={profile.image || \"/assets/user.png\"} />\n              <Item.Content verticalAlign=\"middle\">\n                <Header as=\"h1\" content={profile.displayName} />\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Statistic.Group widths={2}>\n            <Statistic label=\"Followers\" value={profile.followersCount} />\n            <Statistic label=\"Following\" value={profile.followingCount} />\n          </Statistic.Group>\n          <Divider />\n          <FollowButton profile={profile} />\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n}\n\nexport default observer(ProfileHeader);\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileContent from \"./ProfileContent\";\nimport ProfileHeader from \"./ProfileHeader\";\n\nfunction ProfilePage() {\n  const { username } = useParams<{ username: string }>();\n  const { profileStore } = useStore();\n  const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\n\n  useEffect(() => {\n    loadProfile(username);\n    return () => {\n      setActiveTab(0);\n    };\n  }, [loadProfile, username, setActiveTab]);\n\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\n\n  return (\n    <Grid>\n      <Grid.Column width={16}>\n        {profile && (\n          <>\n            <ProfileHeader profile={profile} />\n            <ProfileContent profile={profile} />\n          </>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nexport default observer(ProfilePage);\n","import React from \"react\";\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\nimport { useStore } from \"../stores/store\";\n\ninterface Props extends RouteProps {\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n}\n\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\n  const {\n    userStore: { isLoggedIn },\n  } = useStore();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => (isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />)}\n    />\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport Navbar from \"./Navbar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport TestErrors from \"../../features/errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport { useStore } from \"../stores/store\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded) return <LoadingComponent content=\"Loading app...\" />;\n\n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <ModalContainer />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <>\n            <Navbar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <PrivateRoute exact path=\"/activities\" component={ActivityDashboard} />\n                <PrivateRoute path=\"/activities/:id\" component={ActivityDetails} />\n                <PrivateRoute\n                  key={location.key}\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                />\n                <PrivateRoute path=\"/profiles/:username\" component={ProfilePage} />\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\n                <Route path=\"/server-error\" component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}